import sqlite3 as sql

# This class is a subclass to all sql objects
class base(object):
    """
    Method to insert an object into it's respective table from a connection
    All keys and tables were named the same as the schema to make dynamic
    """
    def bootup_insert(self, connection):
        values = self.__dict__
        name = self.__class__.__name__
        keys = values.keys()
        statement = "".join(["INSERT OR REPLACE INTO ", name, "(", ", ".join(keys), ") VALUES(:", ", :".join(keys), ");"])
        connection.execute(statement, values)
        connection.commit()



# Schema generated by bootup when GENERATE_TABLE_SCHEMA was set to True in bootup.py

class Department(base):
    def __init__(self, dept_id, dept_name, dept_head):
        self.dept_id = dept_id #TEXT
        self.dept_name = dept_name #TEXT
        self.dept_head = dept_head #TEXT

class Zipcode(base):
    def __init__(self, zipcode, city, state):
        self.zipcode = zipcode #INT
        self.city = city #TEXT
        self.state = state #TEXT

class Student(base):
    def __init__(self, email, password, name, age, gender, major, street, zipcode):
        self.email = email #TEXT
        self.password = password #TEXT
        self.name = name #TEXT
        self.age = age #INT
        self.gender = gender #CHAR
        self.major = major #TEXT
        self.street = street #TEXT
        self.zipcode = zipcode #INT

class Professor(base):
    def __init__(self, email, password, name, age, gender, office_address, department, title):
        self.email = email #TEXT
        self.password = password #TEXT
        self.name = name #TEXT
        self.age = age #INT
        self.gender = gender #CHAR
        self.office_address = office_address #TEXT
        self.department = department #TEXT
        self.title = title #TEXT

class Course(base):
    def __init__(self, course_id, course_name, course_description):
        self.course_id = course_id #TEXT
        self.course_name = course_name #TEXT
        self.course_description = course_description #TEXT

class Prof_teams(base):
    def __init__(self, team_id):
        self.team_id = team_id #TEXT

class Prof_team_members(base):
    def __init__(self, prof_email, team_id):
        self.prof_email = prof_email #TEXT
        self.team_id = team_id #TEXT

class Sections(base):
    def __init__(self, course_id, sec_no, section_type, enroll_limit, prof_team_id):
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.section_type = section_type #TEXT
        self.enroll_limit = enroll_limit #INT
        self.prof_team_id = prof_team_id #TEXT

class Enrolls(base):
    def __init__(self, student_email, course_id, sec_no):
        self.student_email = student_email #TEXT
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT

class Homework(base):
    def __init__(self, course_id, sec_no, hw_no, hw_details):
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.hw_no = hw_no #INT
        self.hw_details = hw_details #TEXT

class Homework_grades(base):
    def __init__(self, student_email, course_id, sec_no, hw_no, grade):
        self.student_email = student_email #TEXT
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.hw_no = hw_no #INT
        self.grade = grade #REAL

class Exams(base):
    def __init__(self, course_id, sec_no, exam_no, exam_details):
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.exam_no = exam_no #INT
        self.exam_details = exam_details #TEXT

class Exam_grades(base):
    def __init__(self, student_email, course_id, sec_no, exam_no, grades):
        self.student_email = student_email #TEXT
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.exam_no = exam_no #INT
        self.grades = grades #REAL

class Capstone_section(base):
    def __init__(self, course_id, sec_no, project_no, sponsor_id):
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.project_no = project_no #INT
        self.sponsor_id = sponsor_id #TEXT

class Capstone_Team(base):
    def __init__(self, course_id, sec_no, team_id, project_no):
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.team_id = team_id #TEXT
        self.project_no = project_no #INT

class Capstone_Team_Members(base):
    def __init__(self, student_email, team_id, course_id, sec_no):
        self.student_email = student_email #TEXT
        self.team_id = team_id #TEXT
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT

class Capstone_grades(base):
    def __init__(self, course_id, sec_no, team_id, grade):
        self.course_id = course_id #TEXT
        self.sec_no = sec_no #INT
        self.team_id = team_id #TEXT
        self.grade = grade #REAL